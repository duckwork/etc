# bashrc -*- sh -*-

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

BASH_SOURCE_FIRST=(
    aliases
    functions
)

BASH_SOURCE_LAST=(
    blesh
    vterm-emacs
)

for f in "${BASH_SOURCE_FIRST[@]}"; do
    file="${XDG_CONFIG_HOME:-$HOME/.config}/bash/$f.bash"
    if [[ -r "$file" ]]; then
        # echo >&2 "Sourcing '$file'"
        source "$file"
    else
        :
        # echo >&2 "No '$file' found"
    fi
done

for file in "$XDG_CONFIG_HOME"/bash/*.bash; do
    file_base="${file##*/}"
    if memq "${file_base%.bash}" "${BASH_SOURCE_FIRST[@]}"; then
        # echo >&2 "'$file' in BASH_SOURCE_FIRST, skipping"
        continue
    elif memq "${file_base%.bash}" "${BASH_SOURCE_LAST[@]}"; then
        # echo >&2 "'$file' in BASH_SOURCE_LAST, skipping"
        continue
    elif [[ -r "$file" ]]; then
        # echo >&2 "Sourcing '$file'"
        source "$file"
    else
        :
        # echo >&2 "No '$file' found"
    fi
    unset file_base
done

for f in "${BASH_SOURCE_LAST[@]}"; do
    file="${XDG_CONFIG_HOME:-$HOME/.config}/bash/$f.bash"
    if [[ -r "$file" ]]; then
        source "$file"
    else
        :
        #echo >&2 "No '$file' found"
    fi
done

true
